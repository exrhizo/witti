function [xdata] = scatteredPointsSingleCall (data)

% load indexTables

Ihdr = [ 2   102   202   302 ];
% this is a terse spec for Ir
Ir = [ 1*ones(1,128/4) 2*ones(1,128/4) 3*ones(1,128/4) 4*ones(1,128/4) ];

% an approximation...exact values hard to get in a quick print
cval = [ ...
       -5.5361   -7.5292  102.4734   19.7069    2.6000; ...
   -3.4711   -7.1375  131.1858   19.7569   -2.6000; ...
    2.2645   -0.0302  120.3918   20.6535    2.6000; ...
    4.5220    0.2977  129.3691   20.6947   -2.6000; ...
   -1.2687   -6.8605  106.0401   19.7922    2.6000; ...
    0.9676   -6.5139  129.4455   19.8363   -2.6000; ...
   -2.0733   -8.9287   98.5863   19.5276    2.6000; ...
    0.1887   -8.4939  123.7945   19.5835   -2.6000; ...
    3.0097   -6.1669  102.2907   19.8804    2.6000; ...
    5.2353   -5.8193  122.4546   19.9245   -2.6000; ...
    2.2220   -8.2417  108.7974   19.6158    2.6000; ...
    4.4536   -7.8283  144.8129   19.6687   -2.6000; ...
   -5.5674   -3.4226  110.2952   20.2273    2.6000; ...
   -3.3432   -3.0724  125.8999   20.2714   -2.6000; ...
   -6.3274   -5.4714  114.8550   19.9686    2.6000; ...
   -4.1312   -5.1230  119.9553   20.0127   -2.6000; ...
   -1.3310   -2.7921  107.1959   20.3066    2.6000; ...
    0.9351   -2.3713  130.6730   20.3596   -2.6000; ...
   -2.0813   -4.7975  117.3615   20.0538    2.6000; ...
    0.1960   -4.4251  129.1616   20.1009   -2.6000; ...
    2.9488   -2.0672  104.6707   20.3978    2.6000; ...
    5.1779   -1.7162  131.8260   20.4419   -2.6000; ...
    2.2018   -4.0990  113.8866   20.1420    2.6000; ...
    4.4464   -3.7260  124.4445   20.1891   -2.6000; ...
   -5.6056    0.6022  116.8798   20.7329    2.6000; ...
   -3.3819    1.0004  118.3801   20.7829   -2.6000; ...
   -6.3688   -1.4354  126.7304   20.4771    2.6000; ...
   -4.1230   -1.0373  130.1266   20.5271   -2.6000; ...
   -1.3098    1.3282  118.6552   20.8240    2.6000; ...
    0.9023    1.7261  121.5591   20.8740   -2.6000; ...
   -2.1071   -0.6860  124.8214   20.5712    2.6000; ...
    0.1631   -0.3816  130.7435   20.6094   -2.6000; ...
   -8.5655  -22.9957  100.2383   10.7779    2.6000; ...
   -4.9304  -22.5376   94.7734   10.8364   -2.6000; ...
    3.7664  -11.8011  119.8116   12.1167    2.6000; ...
    7.0313  -11.1938   89.5850   12.1853   -2.6000; ...
   -1.6811  -22.1167  100.3673   10.8897    2.6000; ...
    2.0140  -21.4095   90.1898   10.9786   -2.6000; ...
   -2.9525  -25.2201  103.1090   10.4883    2.6000; ...
    0.7680  -24.7002   95.6291   10.5569   -2.6000; ...
    5.1990  -20.9411   91.4735   11.0371    2.6000; ...
    8.6822  -20.3462   88.4106   11.1107   -2.6000; ...
    3.9833  -24.0980  109.3653   10.6357    2.6000; ...
    7.7009  -23.3717   88.0802   10.7297   -2.6000; ...
   -8.2852  -16.8334  110.3720   11.5350    2.6000; ...
   -4.7916  -16.3385   95.9994   11.5934   -2.6000; ...
   -9.6778  -19.8297  114.1871   11.1742    2.6000; ...
   -6.1165  -19.3515   85.9314   11.2327   -2.6000; ...
   -1.6179  -15.9278  106.9358   11.6417    2.6000; ...
    1.8549  -15.2978   91.2609   11.7154   -2.6000; ...
   -2.9423  -18.9963  114.2744   11.2759    2.6000; ...
    0.6404  -18.3867   90.7473   11.3495   -2.6000; ...
    4.9634  -14.8391  106.7819   11.7687    2.6000; ...
    8.3527  -14.2245   88.9980   11.8398   -2.6000; ...
    3.8301  -17.9002  118.1302   11.4080    2.6000; ...
    7.2717  -17.2830   92.4157   11.4816   -2.6000; ...
   -8.1307  -10.6971  110.5720   12.2412    2.6000; ...
   -4.6691  -10.1306   91.5672   12.3047   -2.6000; ...
   -9.4005  -13.6729  127.0558   11.9033    2.6000; ...
   -5.9459  -13.1632   84.4113   11.9618   -2.6000; ...
   -1.6357   -9.8352  112.4453   12.3378    2.6000; ...
    1.7390   -9.1973   95.0795   12.4089   -2.6000; ...
   -2.8513  -12.8741  116.9920   11.9948    2.6000; ...
    0.5589  -12.2269   88.6798   12.0685   -2.6000; ...
    ];

Ix =  [7:3:100 107:3:200 207:3:300 307:3:400];
dlsb = [5:3:98 105:3:198 205:3:298 305:3:398];
dmsb = [6:3:99 106:3:199 206:3:299 306:3:399];

if mod(length(data),400)~=0
    a=floor(length(data)/400);
    data=data(1:400*a);
end
N=length(data);
data=reshape(data,400,N/400)';


Px=zeros(N/400,32*4);
Py=zeros(N/400,32*4);
Pz=zeros(N/400,32*4);


correctionValues=[cval(33:64,:)',cval(1:32,:)',cval(1:32,:)',cval(1:32,:)']; %#ok<NODEF>

rot=[bitor(bitshift(data(:,4), 8),data(:,3))/100,...
     bitor(bitshift(data(:,104), 8),data(:,103))/100,...
     bitor(bitshift(data(:,204), 8),data(:,203))/100,...
     bitor(bitshift(data(:,304), 8),data(:,303))/100];

ct = data(:,Ix);
dt = bitor(bitshift(data(:,dmsb), 8),data(:,dlsb));


for i=1:128 
    Dcorr=correctionValues(3,i);%Distance correction factor
    Vo=correctionValues(4,i);%Vertical offset
    Ho=correctionValues(5,i);%Horizontal offset
    theta=correctionValues(2,i)*pi/180;%vertical correction angle
    alpha=correctionValues(1,i)*pi/180;%Rotational correction angle
    phi=rot(:,Ir(i))*pi/180;%rotational angle    
    dt(:,i)=0.2.*dt(:,i)+Dcorr; %absolute distance
    
    Px(:,i)=dt(:,i).*cos(theta).*(sin(phi).*cos(alpha)-cos(phi).*sin(alpha))-Ho.*(cos(phi).*cos(alpha)+sin(phi).*sin(alpha));
    Py(:,i)=dt(:,i).*cos(theta).*(cos(phi).*cos(alpha)+sin(phi).*sin(alpha))-Ho.*(sin(phi).*cos(alpha)-cos(phi).*sin(alpha));
    Pz(:,i)=dt(:,i).*sin(theta)+Vo;
end

a=size(Px);
N=a(1)*a(2);
xdata=[reshape(Px',N,1),reshape(Py',N,1),reshape(Pz',N,1),reshape(ct',N,1)];
xdata(:,1:3)=xdata(:,1:3)/100;

% a=size(rot);
% N=a(1)*a(2);
% rot=reshape(rot',N,1);






